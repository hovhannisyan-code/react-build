{"version":3,"sources":["img/images.png","Components/Navbar/Navbar.jsx","Components/Footer/Footer.jsx","Components/helpers/date.jsx","Components/Pages/ToDo/Task.jsx","Components/Modals/Confirm.jsx","Components/Modals/TaskModal.jsx","Components/Loader/Preloader.jsx","Redux/actionTypes.jsx","Redux/actions.jsx","Components/Filter/Filter.jsx","Components/Pages/ToDo/ToDo.jsx","Components/Pages/About/About.jsx","Components/Form/FormHook.jsx","Components/Pages/Contact/Contacts.jsx","img/404.jpg","Components/Pages/404/404.jsx","Components/Pages/SingleTask/SingleTask.jsx","Components/helpers/validators.jsx","Context/ContactPageContext.jsx","App.js","Components/Counter/CounterRedux.js","reportWebVitals.js","Redux/reducers/todoReducer.js","Redux/reducers/singleTaskReducer.js","Redux/reducers/contactReducer.js","Redux/reducers/filterReducer.jsx","Redux/store.js","index.js","Components/Filter/filter.module.css","Components/Pages/ToDo/index.module.css","Components/Loader/preloader.module.css","Components/Form/form.module.css","Components/Pages/SingleTask/singletask.module.css","Components/Navbar/navbar.module.css"],"names":["menuItems","slug","menuName","MenuNavbar","menuList","map","item","index","Nav","Item","className","styles","to","activeClassName","active","exact","Navbar","bg","variant","expand","Container","Brand","href","alt","src","todologo","width","height","Toggle","aria-controls","Collapse","id","type","aria-label","aria-describedby","placeholder","icon","faSearch","Footer","DateYMD","date","Date","toISOString","slice","Task","task","disabled","handleDelete","toggleSetRemoveIds","checked","handleSetEditTask","handleToggleStatus","Card","custom_card","Form","Check","onChange","_id","Body","Title","title","Text","cardtext","description","created_at","Button","onClick","faTrash","faEdit","status","faHourglassHalf","faCheckSquare","memo","Confirm","props","handleClose","onSubmit","modalTitle","modalBody","Modal","show","onHide","Header","closeButton","TaskModal","handleChange","e","target","name","value","setState","handleSubmit","key","state","handleSetDate","edit","editTask","inputRef","React","createRef","this","current","focus","size","aria-labelledby","centered","Control","onKeyPress","style","ref","as","rows","selected","PureComponent","Preloader","section","preloader","loader_text","types","Object","freeze","SET_TASKS","TOGGLE_LOADING","DELETE_ONE_TASK","ADD_TASK","EDIT_TASK","TOGGLE_CHECK_TASK","DELETE_CHECKED_TASKS","TOGGLE_CHECK_ALL_TASKS","TOGGLE_OPEN_ADD_TASK_MODAL","SET_MSG","TOGGLE_STATUS_TASK","ADD_CONTACT_FORM","CHANGE_CONTACT_FORM","TOGGLE_CONFIRM_MODAL","TOGGLE_ST_LOADING","SET_ST","TOGGLE_ST_MODAL","TOGGLE_ST_CONFIRM_MODAL","SET_STATUS","CHANGE_SEARCH_VALUE","SET_SORT_DATE","RESET_SEARCH_FORM","API_URL","connect","filterState","search","sort","create_lte","create_gte","complete_lte","complete_gte","dispatch","changeDropDownValue","dropDownType","actionTypes","changeSearchInput","dateType","queryData","query","isLoading","fetch","length","then","res","json","data","error","catch","text","msgType","finally","sortOrFilterTasksThunk","resetSearchForm","searchSection","DropdownButton","btn","Dropdown","toUpperCase","replaceAll","datePicker","ToDoProvider","todoState","tasks","loading","removeTasks","openTaskModal","isAllChecked","isConfirmModal","message","setTasks","console","addOrEditTask","taskdata","method","body","JSON","stringify","headers","log","deleteCheckedTasks","Array","from","removeAnyTasksThunk","deleteTask","deleteOneTaskThunk","toggleStatus","toggleStatusThunk","toggleLoading","toggleCheckAllTasks","toggleOpenTaskModal","toggleConfirmModal","useEffect","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Tasks","Col","xs","sm","md","lg","xl","has","TasksList","reverse","Math","max","Filter","faList","Row","About","Component","FormProvider","formData","contactFormState","responseMessage","changeInput","addContactForm","TOGGLE_CONTACT_LOADING","handleAddContact","contactFormData","isValid","valid","email","replace","toLowerCase","charAt","addContactFormThunk","preventDefault","Group","formGroup","controlId","Label","Contact","NotFound","img404","singletaskProvider","singleTaskState","singleTask","showModal","setSingleTask","history","push","setSingleTaskThunk","deleteSTThunk","toggleEditModal","match","params","taskpage","faStopwatch","timer","faClock","isRequired","minLength","maxLength","emailValidation","ContactContext","createContext","withRouter","useState","setFormData","setLoading","Provider","maxLength25","minLength3","handleAddContactForm","notify","children","pages","path","component","ToDo","SingleTask","heloText","counter","inputValue","test","plusCount","minusCount","resetCount","setInputValue","resetInputValue","App","pagesList","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","Set","reducer","action","errorMsg","idx","findIndex","filter","delete","add","forEach","middlewares","thunk","logger","reducers","combineReducers","todoReducer","contactReducer","singleTaskReducer","filterReducer","store","createStore","applyMiddleware","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c4f56d2c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/images.702e5c65.png\";","import { Nav, Navbar, Container } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from '../Navbar/navbar.module.css';\r\nimport todologo from '../../img/images.png';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nconst menuItems = [\r\n    {\r\n        slug: \"/\",\r\n        menuName: \"Home\"\r\n    },\r\n    {\r\n        slug: \"/contact\",\r\n        menuName: \"Contact\"\r\n    },\r\n    {\r\n        slug: \"/about\",\r\n        menuName: \"About Us\"\r\n    }\r\n];\r\n\r\nconst MenuNavbar = () => {\r\n    const menuList = menuItems.map((item, index) => {\r\n        return (\r\n            <Nav.Item key={index} className={styles.item}>\r\n                <NavLink\r\n                    to={item.slug}\r\n                    activeClassName={styles.active}\r\n                    exact={true}>\r\n                    {item.menuName}\r\n                </NavLink>\r\n            </Nav.Item>\r\n        );\r\n    });\r\n    return (\r\n\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Container>\r\n                \r\n                <Navbar.Brand href=\"/\">\r\n                        <img\r\n                            alt=\"\"\r\n                            src={todologo}\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"d-inline-block align-top\"\r\n                        />{' '}\r\n                        React JS\r\n                        </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-center\">\r\n                    \r\n                        {menuList}\r\n                </Navbar.Collapse>\r\n                <div>\r\n                    <form className=\"form-inline my-2 my-lg-0\">\r\n                        <div className=\"input-group input-group-sm\">\r\n                            <input type=\"text\" className=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" placeholder=\"Search...\" />\r\n                            <div className=\"input-group-append\">\r\n                                <button type=\"button\" className=\"btn btn-secondary btn-number\">\r\n                                    <FontAwesomeIcon icon={faSearch} className=\"mr-1\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        {/* <a className=\"btn btn-success btn-sm ml-3\" href=\"cart.html\">\r\n                            <i className=\"fa fa-shopping-cart\"></i> Cart\r\n                            <span className=\"badge badge-light\">3</span>\r\n                        </a> */}\r\n                    </form>\r\n                </div>\r\n                \r\n            </Container>\r\n\r\n        </Navbar>\r\n\r\n    )\r\n}\r\nexport default MenuNavbar;","const Footer = () => {\r\n    return (\r\n        <div className=\"navbar navbar-inverse navbar-fixed-bottom\">\r\n          <div className=\"container\">\r\n            <p className=\"navbar-text\">© localhost</p>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","export default function DateYMD(date) {\r\n    return new Date(date).toISOString().slice(0, 10);\r\n}","import React, { memo } from \"react\";\r\nimport styles from './index.module.css';\r\nimport { Card, Button, Form } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrash,faCheckSquare,faHourglassHalf } from '@fortawesome/free-solid-svg-icons';\r\nimport Proptypes from 'prop-types';\r\nimport DateYMD from '../../helpers/date';\r\nimport { Link } from 'react-router-dom';\r\nconst Task = ({\r\n    task,\r\n    disabled,\r\n    handleDelete,\r\n    toggleSetRemoveIds,\r\n    checked,\r\n    handleSetEditTask,\r\n    handleToggleStatus\r\n}) => {\r\n    return (\r\n        <Card className={`rounded border-0 ${styles.custom_card} ${checked && styles.checked}`}>\r\n            <Form.Check\r\n                type=\"checkbox\"\r\n                className=\"justify-content-end d-flex\"\r\n                onChange={() => toggleSetRemoveIds(task._id)}\r\n                checked={checked}\r\n            />\r\n            <Card.Body>\r\n                <Link to={`/task/${task._id}`}>\r\n                    <Card.Title>{task.title}</Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text className={styles.cardtext}>\r\n                    {task.description}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                    <Link to={`/task/${task._id}`}>\r\n                        Read More →\r\n                    </Link>\r\n                </Card.Text>\r\n                <Card.Text>\r\n                    End date: {DateYMD(task.date)}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                    Created: {DateYMD(task.created_at)}\r\n                </Card.Text>\r\n                \r\n\r\n                <Button\r\n                    disabled={disabled}\r\n                    variant=\"danger\"\r\n                    onClick={() => handleDelete(task._id)}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                </Button>\r\n                <Button\r\n                    disabled={disabled}\r\n                    variant=\"warning\"\r\n                    className=\"ml-3\"\r\n                    onClick={() => handleSetEditTask(task)}\r\n                >\r\n                    <FontAwesomeIcon icon={faEdit} />\r\n                </Button>\r\n                <Button\r\n                    variant=\"info\"\r\n                    className=\"ml-3\"\r\n                    onClick={() => handleToggleStatus(task)}\r\n                >\r\n                    <FontAwesomeIcon icon={task.status ==='active' ? faHourglassHalf : faCheckSquare} />\r\n                </Button>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    )\r\n\r\n};\r\nTask.propTypes = {\r\n    task: Proptypes.shape({\r\n        _id: Proptypes.string.isRequired,\r\n        title: Proptypes.string.isRequired,\r\n        description: Proptypes.string.isRequired\r\n    }),\r\n    disabled: Proptypes.bool.isRequired,\r\n    handleDelete: Proptypes.func.isRequired,\r\n    toggleSetRemoveIds: Proptypes.func.isRequired,\r\n    checked: Proptypes.bool.isRequired,\r\n    handleSetEditTask: Proptypes.func.isRequired\r\n}\r\nexport default memo(Task);","import { Button, Modal } from 'react-bootstrap';\r\nconst Confirm = (props) => {\r\n    const { handleClose, onSubmit, modalTitle, modalBody } = props;\r\n    const handleSubmit = () => {\r\n        onSubmit();\r\n        handleClose();\r\n    }\r\n    return (\r\n        <Modal show={true} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{modalTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{modalBody}</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n          </Button>\r\n                <Button variant=\"danger\" onClick={handleSubmit}>\r\n                    Remove\r\n          </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\nexport default Confirm;","import React from \"react\";\r\nimport { Form, Button, Modal } from 'react-bootstrap';\r\nimport Proptypes from 'prop-types';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nclass TaskModal extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        const edit = props.editTask ? true : false;\r\n        this.state = {\r\n            _id: '',\r\n            title: '',\r\n            description: '',\r\n            edit,\r\n            ...props.editTask,\r\n            date: props.editTask ? new Date(props.editTask.date) : new Date()\r\n        }\r\n        this.inputRef = React.createRef();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    handleSubmit = ({ key, type }) => {\r\n        const { onSubmit } = this.props;\r\n        const { title, description } = this.state;\r\n        if (\r\n            (type === 'keypress' && key !== 'Enter') ||\r\n            (!title || !description)\r\n        ) return;\r\n\r\n        onSubmit(this.state);\r\n    }\r\n    handleSetDate = (date) => {\r\n        this.setState({\r\n            date\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.inputRef.current.focus();\r\n    }\r\n    componentWillUnmount() {\r\n    }\r\n    render() {\r\n        const { title, description, edit, date } = this.state;\r\n        const { onHide } = this.props;\r\n        return (\r\n            <Modal\r\n                show={true}\r\n                onHide={onHide}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Modal heading\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"d-flex flex-column align-items-center\">\r\n                    <Form.Control\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        placeholder=\"Add Task\"\r\n                        onChange={this.handleChange}\r\n                        onKeyPress={this.handleSubmit}\r\n                        value={title}\r\n                        style={{ width: \"70%\" }}\r\n                        //disabled={disabled}\r\n                        ref={this.inputRef}\r\n                    />\r\n                    <Form.Control\r\n                        name=\"description\"\r\n                        onChange={this.handleChange}\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        style={{ width: \"70%\" }}\r\n                        className=\"my-3\"\r\n                        placeholder=\"Description\"\r\n                        value={description}\r\n                    />\r\n                    <DatePicker selected={new Date(date)} onChange={date => this.handleSetDate(date)} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={onHide}>Close</Button>\r\n                    <Button\r\n                        disabled={!!!title || !!!description}\r\n                        onClick={this.handleSubmit}>\r\n                        {edit ? \"Save\" : \"Add\"}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        )\r\n    }\r\n}\r\nTaskModal.propTypes = {\r\n    onHide: Proptypes.func.isRequired,\r\n    onSubmit: Proptypes.func.isRequired,\r\n    editTask: Proptypes.oneOfType([\r\n        Proptypes.object,\r\n        Proptypes.bool\r\n    ])\r\n}\r\nexport default TaskModal;","import styles from './preloader.module.css';\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={styles.section}>\r\n            <div className={styles.preloader}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            <span className={styles.loader_text}>React Js</span>\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader;","const types = Object.freeze({\r\n    SET_TASKS: \"SET_TASKS\",\r\n    TOGGLE_LOADING: \"TOGGLE_LOADING\",\r\n    DELETE_ONE_TASK: \"DELETE_ONE_TASK\",\r\n    ADD_TASK: \"ADD_TASK\",\r\n    EDIT_TASK: \"EDIT_TASK\",\r\n    TOGGLE_CHECK_TASK: \"TOGGLE_CHECK_TASK\",\r\n    DELETE_CHECKED_TASKS: \"DELETE_CHECKED_TASKS\",\r\n    TOGGLE_CHECK_ALL_TASKS: \"TOGGLE_CHECK_ALL_TASKS\",\r\n    TOGGLE_OPEN_ADD_TASK_MODAL: \"TOGGLE_OPEN_ADD_TASK_MODAL\",\r\n    SET_MSG: \"SET_MSG\",\r\n    TOGGLE_STATUS_TASK: \"TOGGLE_STATUS_TASK\",\r\n    //Contact Form\r\n    ADD_CONTACT_FORM: \"ADD_CONTACT_FORM\",\r\n    CHANGE_CONTACT_FORM: \"CHANGE_CONTACT_FORM\",\r\n    TOGGLE_CONFIRM_MODAL: \"TOGGLE_CONFIRM_MODAL\",\r\n    //Single Task\r\n    TOGGLE_ST_LOADING: \"TOGGLE_ST_LOADING\",\r\n    SET_ST: \"SET_ST\",\r\n    TOGGLE_ST_MODAL: \"TOGGLE_ST_MODAL\",\r\n    TOGGLE_ST_CONFIRM_MODAL: \"TOGGLE_ST_CONFIRM_MODAL\",\r\n    //Filter\r\n    SET_STATUS: \"SET_STATUS\",\r\n    CHANGE_SEARCH_VALUE: \"CHANGE_SEARCH_VALUE\",\r\n    SET_SORT_DATE: \"SET_SORT_DATE\",\r\n    RESET_SEARCH_FORM: \"RESET_SEARCH_FORM\",\r\n\r\n});\r\nexport default types;","import actionTypes from './actionTypes';\r\nimport DateYMD from '../Components/helpers/date';\r\nlet API_URL = \"\";\r\nif (process.env.NODE_ENV === \"production\") {\r\n  API_URL = \"https://react-gor-backend.herokuapp.com\";\r\n} else {\r\n  API_URL = \"http://localhost:3001\";\r\n}\r\n\r\nexport const setTasksThunk = () => (dispatch) => {\r\n    dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: true });\r\n    fetch(`${API_URL}/task`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.error) {\r\n                throw data.error;\r\n            }\r\n            dispatch({ type: actionTypes.SET_TASKS, data });\r\n        })\r\n        .catch(error => {\r\n            dispatch({ type: actionTypes.SET_MSG, text: 'Get Tasks Request Error', msgType: 'error' });\r\n            console.error(\"Get Tasks Request Error\", error);\r\n\r\n        })\r\n        .finally(() => {\r\n            dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: false });\r\n        });\r\n}\r\n\r\nexport const addOrEditTaskThunk = (taskdata) => (dispatch) => {\r\n    dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: true });\r\n    if (taskdata.edit) {\r\n        dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: true });\r\n        fetch(`${API_URL}/task/${taskdata._id}`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(taskdata),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    throw data.error;\r\n                }\r\n\r\n                dispatch({ type: actionTypes.EDIT_TASK, data });\r\n                dispatch({ type: actionTypes.TOGGLE_OPEN_ADD_TASK_MODAL, task: null });\r\n                dispatch({ type: actionTypes.SET_MSG, text: 'Task edited successfully', msgType: 'success' });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                dispatch({ type: actionTypes.SET_MSG, text: 'Get Tasks Request Error', msgType: 'error' });\r\n            })\r\n            .finally(() => {\r\n                dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: false });\r\n            });\r\n    } else {\r\n        fetch(`${API_URL}/task`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(taskdata),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    throw data.error;\r\n                }\r\n                dispatch({ type: actionTypes.ADD_TASK, data });\r\n                dispatch({ type: actionTypes.TOGGLE_OPEN_ADD_TASK_MODAL, task: null });\r\n                dispatch({ type: actionTypes.SET_MSG, text: 'Task added successfully', msgType: 'success' });\r\n            })\r\n            .catch(error => {\r\n                console.log('catch Error', error);\r\n                dispatch({ type: actionTypes.SET_MSG, text: error.message, msgType: 'error' });\r\n            })\r\n            .finally(() => {\r\n                dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: false });\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const deleteOneTaskThunk = (_id) => (dispatch) => {\r\n    dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: true });\r\n    fetch(`${API_URL}/task/${_id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.error) {\r\n                throw data.error;\r\n            }\r\n            dispatch({ type: actionTypes.DELETE_ONE_TASK, _id: _id })\r\n            dispatch({ type: actionTypes.SET_MSG, text: 'Task deleted successfully', msgType: 'success' });\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            dispatch({ type: actionTypes.SET_MSG, text: error.message, msgType: 'error' });\r\n        })\r\n        .finally(() => {\r\n            dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: false });\r\n        });\r\n}\r\n\r\nexport const removeAnyTasksThunk = (removeTasks) => (dispatch) => {\r\n    dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: true });\r\n    fetch(`${API_URL}/task`, {\r\n        method: 'PATCH',\r\n        body: JSON.stringify({ tasks: Array.from(removeTasks) }),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.error) {\r\n                throw data.error;\r\n            }\r\n            dispatch({ type: actionTypes.DELETE_CHECKED_TASKS });\r\n            dispatch({ type: actionTypes.SET_MSG, text: 'Tasks deleted successfully', msgType: 'success' });\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            dispatch({ type: actionTypes.SET_MSG, text: error.message, msgType: 'error' });\r\n        })\r\n        .finally(() => {\r\n            dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: false });\r\n        });\r\n}\r\nexport const setSingleTaskThunk = (id, history) => (dispatch) => {\r\n    dispatch({ type: actionTypes.TOGGLE_ST_LOADING, loading: true });\r\n    fetch(`${API_URL}/task/${id}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.error) {\r\n                throw data.error;\r\n            }\r\n            dispatch({ type: actionTypes.SET_ST, task: data });\r\n            dispatch({ type: actionTypes.TOGGLE_ST_LOADING, loading: false });\r\n        })\r\n        .catch(error => {\r\n            history.push(\"/404\");\r\n            console.log('error', error);\r\n        })\r\n}\r\nexport const editSingleTaskThunk = (taskdata) => (dispatch) => {\r\n\r\n    taskdata.date = DateYMD(taskdata.date);\r\n    dispatch({ type: actionTypes.TOGGLE_ST_LOADING, loading: true });\r\n    fetch(`${API_URL}/task/${taskdata._id}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(taskdata),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.error) {\r\n                throw data.error;\r\n            }\r\n            dispatch({ type: actionTypes.TOGGLE_ST_MODAL })\r\n            dispatch({ type: actionTypes.SET_ST, task: data });\r\n            dispatch({ type: actionTypes.SET_MSG, text: 'Task edited successfully', msgType: 'success' });\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            dispatch({ type: actionTypes.SET_MSG, text: error.message, msgType: 'error' });\r\n        })\r\n        .finally(() => {\r\n            dispatch({ type: actionTypes.TOGGLE_ST_LOADING, loading: false });\r\n        });\r\n}\r\nexport const deleteSTThunk = (_id, history) => (dispatch) => {\r\n    dispatch({ type: actionTypes.TOGGLE_ST_LOADING, loading: true });\r\n    fetch(`${API_URL}/task/${_id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.error) {\r\n                throw data.error;\r\n            }\r\n            dispatch({ type: actionTypes.TOGGLE_ST_LOADING, loading: false });\r\n            history.push(\"/\");\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            dispatch({ type: actionTypes.SET_MSG, text: error.message, msgType: 'error' });\r\n        })\r\n}\r\nexport const toggleSTEditModal = (dispatch) => {\r\n    dispatch({ type: actionTypes.TOGGLE_ST_MODAL })\r\n}\r\n\r\n\r\nexport const addContactFormThunk = (formData) => (dispatch) => {\r\n    dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: true });//Loading Started\r\n    const contactFormData = { ...formData };\r\n    const isValid = contactFormData.name.valid &&\r\n        contactFormData.email.valid &&\r\n        contactFormData.message.valid;\r\n\r\n    let error = \"\";\r\n    if (!contactFormData.name.valid) {\r\n        error = !contactFormData.name.value ? \"Field is Required\" : contactFormData.name.error;\r\n    } else if (!contactFormData.email.valid) {\r\n        error = !contactFormData.email.value ? \"Field is Required\" : contactFormData.email.error;\r\n    } else if (!contactFormData.message.valid) {\r\n        error = !contactFormData.message.value ? \"Field is Required\" : contactFormData.message.error;\r\n    }\r\n\r\n    console.log(\"error\", error);\r\n    // setErrorMessage(error);\r\n    if (!isValid) return;\r\n\r\n    for (let key in contactFormData) {\r\n        contactFormData[key] = contactFormData[key].value;\r\n    }\r\n\r\n\r\n    fetch(`${API_URL}/form`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(contactFormData),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.error) {\r\n                throw data.error;\r\n            }\r\n            dispatch({ type: actionTypes.SET_MSG, text: 'Your message has been sent successfully!', msgType: 'success' });\r\n            dispatch({ type: actionTypes.ADD_CONTACT_FORM });\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            if (typeof error.message === 'string') {\r\n                error = error.message.replace('.body.', '').toLowerCase();\r\n                error = error.charAt(0).toUpperCase() + error.slice(1);\r\n            }\r\n            dispatch({ type: actionTypes.SET_MSG, text: error, msgType: 'error' });\r\n        })\r\n        .finally(() => {\r\n            dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: false });//Loading Started\r\n        });\r\n}\r\n\r\nexport const toggleStatusThunk = (task) => (dispatch) => {\r\n    const status = task.status === \"active\" ? \"done\" : \"active\";\r\n    dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: true });\r\n    fetch(`${API_URL}/task/${task._id}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ status }),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.error) throw data.error;\r\n            dispatch({ type: actionTypes.TOGGLE_STATUS_TASK, task: data });\r\n            dispatch({ type: actionTypes.SET_MSG, text: 'Status changed successfully', msgType: 'success' });\r\n        })\r\n        .catch(error => {\r\n            dispatch({ type: actionTypes.SET_MSG, text: error, msgType: 'error' });\r\n        })\r\n        .finally(() => {\r\n            dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: false });\r\n        });\r\n}\r\n\r\nexport const sortOrFilterTasksThunk = (queryData) => (dispatch) => {\r\n    let query = \"?\";\r\n    for (let key in queryData) {\r\n        query += key + \"=\" + queryData[key] + \"&\";\r\n    }\r\n    dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: true });\r\n    fetch(`${API_URL}/task` + query.slice(0, query.length - 1))\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.error) throw data.error;\r\n            dispatch({ type: actionTypes.SET_TASKS, data });\r\n        })\r\n        .catch(error => {\r\n            dispatch({ type: actionTypes.SET_MSG, text: error, msgType: 'error' });\r\n        })\r\n        .finally(() => {\r\n            dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading: false });\r\n        });\r\n}","import { DropdownButton, Dropdown, Form, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../Redux/actionTypes';\r\nimport styles from './filter.module.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport { sortOrFilterTasksThunk } from '../../Redux/actions';\r\nimport DateYMD from '../helpers/date';\r\n\r\nconst Search = (props) => {\r\n    const {\r\n        //functions\r\n        changeDropDownValue,\r\n        changeSearchInput,\r\n        handleSetDate,\r\n        handleSubmit,\r\n        resetSearchForm,\r\n        ...state\r\n\r\n    } = props;\r\n    const {\r\n        search,\r\n        status,\r\n        sort,\r\n        create_lte,\r\n        create_gte,\r\n        complete_lte,\r\n        complete_gte\r\n    } = state;\r\n    const handleS = () => {\r\n        const queryData = {};\r\n        for (let key in state) {\r\n            if (state[key]) {\r\n                queryData[key] = typeof state[key] === \"object\" ? DateYMD(state[key]) : state[key];\r\n            }\r\n        }\r\n        handleSubmit(queryData);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Filter</h1>\r\n            <div className={styles.searchSection}>\r\n                <div className=\"text-center\">\r\n                    <Form.Control\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        placeholder=\"Search\"\r\n                        value={search}\r\n                        onChange={(e) => changeSearchInput(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"m-auto\">\r\n                    <DropdownButton\r\n                        id=\"dropdown-baic-button\"\r\n                        variant=\"dark\"\r\n                        title={!!!status ? \"Status\" : status}\r\n                        className={`my-2 w-100 ${styles.btn}`}\r\n                    >\r\n                        <Dropdown.Item onClick={(e) => changeDropDownValue(\"done\", \"status\")}>Done</Dropdown.Item>\r\n                        <Dropdown.Item onClick={(e) => changeDropDownValue(\"active\", \"status\")}>Active</Dropdown.Item>\r\n                        <Dropdown.Item onClick={(e) => changeDropDownValue(\"\", \"status\")}>Reset</Dropdown.Item>\r\n                    </DropdownButton>\r\n\r\n                    <DropdownButton \r\n                    id=\"dropdown-basic-button\" \r\n                    title={!!!sort ? \"Sort\" : sort.toUpperCase().replaceAll(\"_\", \" \")} \r\n                    variant=\"dark\"\r\n                    className={`my-2 w-100 ${styles.btn}`}>\r\n                        <Dropdown.Item onClick={(e) => changeDropDownValue(\"a-z\", \"sort\")}>A-Z</Dropdown.Item>\r\n                        <Dropdown.Item onClick={(e) => changeDropDownValue(\"z-a\", \"sort\")}>Z-A</Dropdown.Item>\r\n                        <Dropdown.Item onClick={(e) => changeDropDownValue(\"creation_date_oldest\", \"sort\")}>creation_date_oldest</Dropdown.Item>\r\n                        <Dropdown.Item onClick={(e) => changeDropDownValue(\"creation_date_newest\", \"sort\")}>creation_date_newest</Dropdown.Item>\r\n                        <Dropdown.Item onClick={(e) => changeDropDownValue(\"completion_date_oldest\", \"sort\")} >completion_date_oldest</Dropdown.Item>\r\n                        <Dropdown.Item onClick={(e) => changeDropDownValue(\"completion_date_newest\", \"sort\")}>completion_date_newest</Dropdown.Item>\r\n                        <Dropdown.Item onClick={(e) => changeDropDownValue(\"\", \"sort\")}>Reset</Dropdown.Item>\r\n                    </DropdownButton>\r\n                </div>\r\n                <div className={styles.datePicker}>\r\n                    create_lte: <DatePicker\r\n                        selected={create_lte ? create_lte : null}\r\n                        onChange={date => handleSetDate(\"create_lte\", date)}\r\n                    />\r\n                </div>\r\n                <div className={styles.datePicker}>\r\n                    create_gte: <DatePicker\r\n                        selected={create_gte}\r\n                        onChange={date => handleSetDate(\"create_gte\", date)}\r\n                    />\r\n                </div>\r\n                <div className={styles.datePicker}>\r\n                    complete_lte: <DatePicker\r\n                        selected={complete_lte}\r\n                        onChange={date => handleSetDate(\"complete_lte\", date)}\r\n                    />\r\n                </div>\r\n                <div className={styles.datePicker}>\r\n                    complete_gte: <DatePicker\r\n                        selected={complete_gte}\r\n                        onChange={date => handleSetDate(\"complete_gte\", date)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Button variant=\"primary mt-3\"\r\n                        onClick={handleS}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button variant=\"primary mt-3 ml-5\"\r\n                        onClick={resetSearchForm}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </div>\r\n\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {\r\n        search,\r\n        status,\r\n        sort,\r\n        create_lte,\r\n        create_gte,\r\n        complete_lte,\r\n        complete_gte\r\n    } = state.filterState;\r\n    return {\r\n        search,\r\n        status,\r\n        sort,\r\n        create_lte,\r\n        create_gte,\r\n        complete_lte,\r\n        complete_gte\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeDropDownValue: (value, dropDownType) => dispatch({\r\n            type: actionTypes.SET_STATUS,\r\n            dropDownType,\r\n            value\r\n        }),\r\n        changeSearchInput: (value) => dispatch({\r\n            type: actionTypes.CHANGE_SEARCH_VALUE,\r\n            value\r\n        }),\r\n        handleSetDate: (dateType, date) => dispatch({\r\n            type: actionTypes.SET_SORT_DATE,\r\n            dateType,\r\n            date\r\n        }),\r\n        handleSubmit: (queryData) => dispatch(sortOrFilterTasksThunk(queryData)),\r\n        resetSearchForm: () => dispatch({ type: actionTypes.RESET_SEARCH_FORM })\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import React, { useEffect } from \"react\";\r\nimport Task from './Task';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport DateYMD from '../../helpers/date';\r\nimport Confirm from '../../Modals/Confirm';\r\nimport TaskModal from '../../Modals/TaskModal';\r\nimport Preloader from \"../../Loader/Preloader\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faList } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../../Redux/actionTypes';\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Filter from '../../Filter/Filter';\r\nimport {\r\n    setTasksThunk,\r\n    addOrEditTaskThunk,\r\n    deleteOneTaskThunk,\r\n    removeAnyTasksThunk,\r\n    toggleStatusThunk\r\n} from '../../../Redux/actions';\r\n\r\nconst ToDo = (props) => {\r\n    const {\r\n        //state\r\n        tasks,\r\n        loading,\r\n        removeTasks,\r\n        isAllChecked,\r\n        openTaskModal,\r\n        isConfirmModal,\r\n        message,\r\n        //functions\r\n        toggleSetRemoveIds,\r\n        toggleCheckAllTasks,\r\n        toggleOpenTaskModal,\r\n        toggleConfirmModal,\r\n        setTasks,\r\n        deleteTask,\r\n        editTask,\r\n        deleteCheckedTasks,\r\n        toggleStatus\r\n    } = props\r\n    const handleCatchValue = (taskdata) => {\r\n        if (!taskdata.title || !taskdata.description) return;\r\n        taskdata.date = DateYMD(taskdata.date);\r\n        props.addOrEditTask(taskdata);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTasks();\r\n    }, [setTasks]);\r\n    useEffect( () => {\r\n        message.type && toast[message.type](`🦄 ${message.text}`, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    },[message]);\r\n    const Tasks = tasks.map((task, index) => {\r\n        return (\r\n            <Col\r\n                key={task._id}\r\n                xs={12}\r\n                sm={6}\r\n                md={4}\r\n                lg={6}\r\n                xl={4}\r\n                className=\"d-flex justify-content-center mt-3 align-items-center\">\r\n                <Task\r\n                    task={task}\r\n                    disabled={!!removeTasks.size}\r\n                    handleDelete={deleteTask}\r\n                    toggleSetRemoveIds={toggleSetRemoveIds}\r\n                    checked={removeTasks.has(task._id)}\r\n                    handleSetEditTask={toggleOpenTaskModal}\r\n                    handleToggleStatus={toggleStatus}\r\n                />\r\n            </Col>\r\n        )\r\n    });\r\n    let TasksList = tasks.reverse().slice(Math.max(tasks.length - 5, 0)).map((task, index) => {\r\n        \r\n        return (\r\n            <li key={task._id} className=\"list-group-item\">\r\n                <Link to={`/task/${task._id}`}>{task.title}</Link>\r\n            </li>\r\n        )\r\n    });\r\n    \r\n    return (\r\n        <>\r\n            \r\n            <Col xl={3} lg={4} sm={3}>\r\n                <div className=\"card bg- mb-3\">\r\n                    <Filter />\r\n                </div>\r\n                <div className=\"card bg- mb-3\">\r\n                    <div className=\"card-header bg-dark text-white text-uppercase\"><FontAwesomeIcon icon={faList} className=\"mr-1\" />Latest 5 tasks</div>\r\n                    <ul className=\"list-group category_block\">\r\n                        {TasksList}\r\n                    </ul>\r\n                </div>\r\n                \r\n                \r\n            </Col>\r\n            <Col xl={9} sm={9} md={9} lg={8}>\r\n\r\n\r\n                <Container className=\"todo-list\">\r\n                    <Row className=\"justify-content-center my-5\">\r\n                        <Col>\r\n                            <Button\r\n                                className=\"ml-3\"\r\n                                variant=\"primary\"\r\n                                onClick={toggleOpenTaskModal}\r\n                            >\r\n                                Add Task\r\n                                    </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center mt-3\">\r\n                        {!Tasks.length && <div>Tasks is Empty</div>}\r\n                        {Tasks}\r\n                    </Row>\r\n                    <Row className=\"mt-5\">\r\n                        <Col>\r\n                            {!!Tasks.length && <Button\r\n                                variant=\"danger\"\r\n                                onClick={toggleConfirmModal}\r\n                                disabled={!!!removeTasks.size}\r\n                            >\r\n                                Remove Selected\r\n                                </Button>}\r\n                            {!!Tasks.length && <Button\r\n                                className=\"ml-3\"\r\n                                variant=\"primary\"\r\n                                onClick={toggleCheckAllTasks}\r\n                            >\r\n                                {isAllChecked ? 'Remove All Selected' : 'Select All'}\r\n                            </Button>}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Col>\r\n            {isConfirmModal && <Confirm\r\n                handleClose={toggleConfirmModal}\r\n                onSubmit={() => deleteCheckedTasks(removeTasks)}\r\n                modalTitle={`Modal heading`}\r\n                modalBody={`Do you want to delete ${removeTasks.size} tasks`}\r\n            />}\r\n            {openTaskModal && <TaskModal\r\n                editTask={editTask}\r\n                onHide={toggleOpenTaskModal}\r\n                onSubmit={handleCatchValue}\r\n            />}\r\n            {loading && <Preloader />}\r\n            {\r\n                <ToastContainer />\r\n            }\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const {\r\n        tasks,\r\n        loading,\r\n        removeTasks,\r\n        editTask,\r\n        openTaskModal,\r\n        isAllChecked,\r\n        isConfirmModal,\r\n        message\r\n    } = state.todoState;\r\n    return {\r\n        tasks,\r\n        loading,\r\n        removeTasks,\r\n        editTask,\r\n        openTaskModal,\r\n        isAllChecked,\r\n        isConfirmModal,\r\n        message\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setTasks: () => dispatch(setTasksThunk()),\r\n        addOrEditTask: (data) => dispatch(addOrEditTaskThunk(data)),\r\n        deleteCheckedTasks: (removeTasks) => dispatch(removeAnyTasksThunk(removeTasks)),\r\n        deleteTask: (_id) => dispatch(deleteOneTaskThunk(_id)),\r\n        toggleStatus: (task) => dispatch(toggleStatusThunk(task)),\r\n\r\n        toggleLoading: (isLoading) => {\r\n            dispatch({ type: actionTypes.TOGGLE_LOADING, isLoading });\r\n        },\r\n        toggleSetRemoveIds: (_id) => {\r\n            dispatch({ type: actionTypes.TOGGLE_CHECK_TASK, _id });\r\n        },\r\n\r\n        toggleCheckAllTasks: () => {\r\n            dispatch({ type: actionTypes.TOGGLE_CHECK_ALL_TASKS });\r\n        },\r\n        toggleOpenTaskModal: (task = null) => {\r\n            dispatch({ type: actionTypes.TOGGLE_OPEN_ADD_TASK_MODAL, task });\r\n        },\r\n        toggleConfirmModal: () => {\r\n            dispatch({ type: actionTypes.TOGGLE_CONFIRM_MODAL });\r\n        }\r\n    }\r\n}\r\nconst ToDoProvider = connect(mapStateToProps, mapDispatchToProps)(ToDo)\r\nexport default ToDoProvider;","import React from 'react';\r\n\r\nclass About extends React.Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h1>About Us</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import { useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Preloader from '../Loader/Preloader';\r\nimport styles from './form.module.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n/**\r\n * Redux\r\n */\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../Redux/actionTypes';\r\nimport { addContactFormThunk } from '../../Redux/actions';\r\nconst FormHook = (props) => {\r\n    const {\r\n        formData,\r\n        loading,\r\n        responseMessage\r\n    } = props;\r\n    const { name, email, message } = formData;\r\n    const isValid = name.valid && email.valid && message.valid;\r\n    useEffect( () => {\r\n        responseMessage.type && toast[responseMessage.type](`🦄 ${responseMessage.text}`, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    },[responseMessage]);\r\n    return (\r\n        <>\r\n            <Form onSubmit={(e) => e.preventDefault()}>\r\n                <ToastContainer />\r\n                <Form.Group className={styles.formGroup} controlId=\"formBasicName\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        name=\"name\"\r\n                        onChange={(e) => props.changeInput(e.target)}\r\n                        value={name.value}\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                    />\r\n                    <Form.Text className=\"text-danger\">\r\n                        {name.error}\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className={styles.formGroup} controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        name=\"email\"\r\n                        onChange={(e) => props.changeInput(e.target)}\r\n                        value={email.value}\r\n                        type=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                    />\r\n                    <Form.Text className=\"text-danger\">\r\n                        {email.error}\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className={styles.formGroup} controlId=\"formBasicMessage\">\r\n                    <Form.Label>Message</Form.Label>\r\n                    <Form.Control\r\n                        name=\"message\"\r\n                        onChange={(e) => props.changeInput(e.target)}\r\n                        placeholder=\"Message\"\r\n                        value={message.value}\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                    />\r\n                    <Form.Text className=\"text-danger\">\r\n                        {message.error}\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                    disabled={!isValid} //remove disabled \r\n                    onClick={() => props.handleAddContact(formData)}\r\n                    variant=\"primary\"\r\n                    type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n            {loading && <Preloader />}\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        formData: state.contactFormState.formData,\r\n        loading: state.todoState.loading,\r\n        responseMessage: state.todoState.message,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeInput: (data) => {\r\n            dispatch({ type: actionTypes.CHANGE_CONTACT_FORM, data });\r\n        },\r\n        addContactForm: () => {\r\n            dispatch({ type: actionTypes.ADD_CONTACT_FORM });\r\n        },\r\n        toggleLoading: (isLoading) => {\r\n            dispatch({ type: actionTypes.TOGGLE_CONTACT_LOADING, isLoading });\r\n        },\r\n\r\n        handleAddContact: (formData) => dispatch(addContactFormThunk(formData))\r\n    }\r\n}\r\nconst FormProvider = connect(mapStateToProps, mapDispatchToProps)(FormHook)\r\nexport default FormProvider;","import React from 'react';\r\nimport ContactForm from '../../Form/FormHook'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nclass Contact extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Contact Us</h1>\r\n                <Row>\r\n                    <Col xs={5} className=\"m-auto\">\r\n                        <ContactForm />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","export default __webpack_public_path__ + \"static/media/404.5ff4dfcd.jpg\";","import img404 from '../../../img/404.jpg';\r\nimport {NavLink} from 'react-router-dom'; \r\nconst NotFound = () => {\r\n    return (\r\n        <>\r\n            <h1>404 Not Found</h1>\r\n            <NavLink to=\"/\" exact={true}>Go to ToDoList page</NavLink>\r\n            <div>\r\n                <img className=\"mt-5\" src={img404} alt=\"404 not found\"></img>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default NotFound;","import React, { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClock, faStopwatch } from '@fortawesome/free-solid-svg-icons';\r\nimport styles from \"./singletask.module.css\";\r\nimport { Button } from 'react-bootstrap';\r\nimport DateYMD from '../../helpers/date';\r\nimport Confirm from '../../Modals/Confirm';\r\nimport TaskModal from '../../Modals/TaskModal';\r\nimport Preloader from \"../../Loader/Preloader\";\r\n/**\r\n * Redux\r\n */\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    setSingleTaskThunk,\r\n    deleteSTThunk,\r\n    editSingleTaskThunk\r\n} from '../../../Redux/actions';\r\nimport actionTypes from '../../../Redux/actionTypes';\r\nconst SingleTask = (props) => {\r\n\r\n    //Effects\r\n    const { id } = props.match.params;\r\n    const { history, setSingleTask } = props;\r\n    useEffect(() => {\r\n        setSingleTask(id, history);\r\n    }, [id, setSingleTask, history]);\r\n\r\n    const {\r\n        singleTask,\r\n        showModal,\r\n        openTaskModal,\r\n        loading\r\n    } = props;\r\n\r\n\r\n    if (!singleTask) { // todo check error from server\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={`m-auto ${styles.taskpage}`}>\r\n            <div className={styles.task}>\r\n                <h2>{singleTask.title}</h2>\r\n                <div>\r\n                    {singleTask.description}\r\n                </div>\r\n                <div>\r\n                    <FontAwesomeIcon icon={faStopwatch} className={`mr-1 ${styles.timer}`} />\r\n                    {DateYMD(singleTask.date)}\r\n                </div>\r\n                <div>\r\n                    <FontAwesomeIcon icon={faClock} className=\"mr-1\" />\r\n                    {DateYMD(singleTask.created_at)}\r\n                </div>\r\n                <div className=\"mt-2\">\r\n                    <Button variant=\"danger\" onClick={props.toggleConfirmModal} className=\"mr-2\">Delete</Button>\r\n                    <Button variant=\"warning\" onClick={props.toggleEditModal}>Edit</Button>\r\n                </div>\r\n            </div>\r\n            {showModal && <Confirm\r\n                handleClose={props.toggleConfirmModal}\r\n                onSubmit={() => props.deleteTask(singleTask._id, history)}\r\n                modalTitle={`Are you sure ?`}\r\n                modalBody={`Do you want to delete ${singleTask.title} task ?`}\r\n            />}\r\n            {openTaskModal && <TaskModal\r\n                editTask={singleTask}\r\n                onHide={props.toggleEditModal}\r\n                onSubmit={props.editTask}\r\n            />}\r\n            {loading && <Preloader />}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const {\r\n        singleTask,\r\n        showModal,\r\n        openTaskModal,\r\n        loading\r\n    } = state.singleTaskState;\r\n    return {\r\n        singleTask,\r\n        showModal,\r\n        openTaskModal,\r\n        loading\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSingleTask: (id, history) => dispatch(setSingleTaskThunk(id, history)),\r\n        editTask: (singleTask) => dispatch(editSingleTaskThunk(singleTask)),\r\n        deleteTask: (_id, history) => dispatch(deleteSTThunk(_id, history)),\r\n\r\n        toggleEditModal: () => dispatch({ type: actionTypes.TOGGLE_ST_MODAL }),\r\n        toggleConfirmModal: () => {\r\n            console.log('asdasd')\r\n            dispatch({ type: actionTypes.TOGGLE_ST_CONFIRM_MODAL });\r\n        }\r\n    }\r\n}\r\nconst singletaskProvider = connect(mapStateToProps, mapDispatchToProps)(SingleTask)\r\nexport default singletaskProvider;","export function isRequired(value) {\r\n    return !!value ? undefined : \"This field is required\";\r\n}\r\n\r\nexport function minLength(length) {\r\n    return function(value) {\r\n        return value.length >= length ? undefined : `This field must be at least ${length} characters`;\r\n    }\r\n}\r\n\r\nexport function maxLength(length) {\r\n    return function(value) {\r\n        return value.length <= length ? undefined : `The field must be less than ${length} characters`;\r\n    }\r\n}\r\n\r\nexport function emailValidation(email) {\r\n    if ( email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i) ) {\r\n        return undefined;\r\n    }\r\n\r\n    return 'Please enter a valid email';\r\n}\r\n\r\nexport function formValidate(formData) {\r\n    for (let key in formData) {\r\n        if (typeof formData[key] === \"object\" && !formData[key].valid)\r\n            return false;\r\n    }\r\n    return true;\r\n\r\n}","import { createContext, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { notify } from 'react-notify-toast';\r\nimport { isRequired, maxLength, minLength, emailValidation } from '../Components/helpers/validators';\r\nexport const ContactContext = createContext();\r\n\r\nconst ContactContextProvider = (props) => {\r\n    const [formData, setFormData] = useState({\r\n        name: {\r\n            value: \"\",\r\n            valid: false,\r\n            error: null\r\n        },\r\n        email: {\r\n            value: \"\",\r\n            valid: false,\r\n            error: null\r\n        },\r\n        message: {\r\n            value: \"\",\r\n            valid: false,\r\n            error: null\r\n        }\r\n    });\r\n    // loading state\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n\r\n        const { name, value } = e.target;\r\n        let error = null;\r\n        const maxLength25 = maxLength(25);\r\n        const minLength3 = minLength(3);\r\n\r\n        switch (name) {\r\n            case \"name\":\r\n            case \"message\":\r\n                error = isRequired(value) ||\r\n                    minLength3(value) ||\r\n                    maxLength25(value);\r\n                break;\r\n            case \"email\":\r\n                error = isRequired(value) ||\r\n                    emailValidation(value)\r\n                break;\r\n            default: ;\r\n        }\r\n        setFormData({\r\n            ...formData,\r\n            [name]: {\r\n                value,\r\n                valid: !!!error,\r\n                error\r\n            },\r\n        });\r\n    }\r\n    const handleAddContactForm = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const contactFormData = { ...formData };\r\n        for (let key in formData) {\r\n            contactFormData[key] = contactFormData[key].value\r\n        }\r\n        fetch(\"http://localhost:3001/form\", {\r\n            method: 'POST',\r\n            body: JSON.stringify(contactFormData),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    throw data.error;\r\n                }\r\n                notify.show('Your message has been sent successfully!', 'success');\r\n                setFormData({\r\n                    name: {\r\n                        value: \"\",\r\n                        valid: false,\r\n                        error: null\r\n                    },\r\n                    email: {\r\n                        value: \"\",\r\n                        valid: false,\r\n                        error: null\r\n                    },\r\n                    message: {\r\n                        value: \"\",\r\n                        valid: false,\r\n                        error: null\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                if (typeof error.message === 'string') {\r\n                    error = error.message.replace('.body.', '').toLowerCase();\r\n                    error = error.charAt(0).toUpperCase() + error.slice(1);\r\n                }\r\n                notify.show(error, 'error');\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }\r\n    return <ContactContext.Provider\r\n        value={\r\n            {\r\n                loading,\r\n                formData,\r\n                handleChange,\r\n                handleAddContactForm\r\n            }\r\n        }\r\n    >\r\n        {props.children}\r\n    </ContactContext.Provider>\r\n}\r\nexport default withRouter(ContactContextProvider);","import { Component } from 'react';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport Footer from './Components/Footer/Footer';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport './App.css';\r\n/**\r\n * Pages\r\n */\r\nimport ToDo from './Components/Pages/ToDo/ToDo';\r\nimport About from './Components/Pages/About/About';\r\nimport Contact from './Components/Pages/Contact/Contacts';\r\nimport NotFound from './Components/Pages/404/404';\r\nimport SingleTask from './Components/Pages/SingleTask/SingleTask';\r\n\r\n/**\r\n * Context\r\n */\r\nimport ContactContextProvider from './Context/ContactPageContext';\r\n/**\r\n * Redux\r\n */\r\nimport CounterReduxWithState from './Components/Counter/CounterRedux';\r\nconst pages = [\r\n  {\r\n    path: \"/\",\r\n    component: ToDo\r\n  },\r\n  {\r\n    path: \"/contact\",\r\n    component: Contact\r\n  },\r\n  {\r\n    path: \"/about\",\r\n    component: About\r\n  },\r\n  {\r\n    path: \"/task/:id\",\r\n    component: SingleTask\r\n  },\r\n  {\r\n    path: \"/counter\",\r\n    component: CounterReduxWithState\r\n  },\r\n  {\r\n    path: \"/404\",\r\n    component: NotFound\r\n  }\r\n];\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    const pagesList = pages.map((item, index) => {\r\n      if (item.path === '/contact') {\r\n        return (\r\n          <Route\r\n            key={index}\r\n            path={item.path}\r\n            exact\r\n            render={(props) => {\r\n              return (\r\n                <ContactContextProvider>\r\n                  {<item.component {...props} />}\r\n                </ContactContextProvider>\r\n              )\r\n            }}\r\n          />\r\n        )\r\n      }\r\n      return (\r\n        <Route\r\n          key={index}\r\n          path={item.path}\r\n          component={item.component}\r\n          exact\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"menu\">\r\n          <Navbar />\r\n          <section className=\"jumbotron text-center\">\r\n            <div className=\"container\">\r\n                <h1 className=\"jumbotron-heading\">The Best Free To-Do App</h1>\r\n                <p className=\"lead text-muted mb-0\">Le Lorem Ipsum est simplement du faux texte employé dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les années 1500, quand un peintre anonyme assembla ensemble des morceaux de texte pour réaliser un livre spécimen de polices de texte...</p>\r\n            </div>\r\n        </section>\r\n          <Container className=\"main-container\">\r\n            <Row>\r\n                <Switch>\r\n                  {pagesList}\r\n                  <Redirect to=\"/404\" />\r\n                </Switch>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst CounterRedux = (props) => {\r\n    const {\r\n        plusCount,\r\n        minusCount,\r\n        resetCount,\r\n        setInputValue,\r\n        resetInputValue,\r\n        inputValue,\r\n        heloText,\r\n\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <h1>Counter Redux</h1>\r\n            <div>\r\n                {heloText}\r\n            </div>\r\n            <div>\r\n                <p>{props.counter}</p>\r\n                <Button variant=\"outline-primary\" className=\"mx-2\" onClick={plusCount}>Plus</Button>\r\n                <Button variant=\"outline-primary\" className=\"mx-2\" onClick={minusCount}>Minus</Button>\r\n                <Button variant=\"outline-danger\" className=\"mx-2\" onClick={resetCount}>Reset</Button>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n                <input value={inputValue} onChange={(e) => setInputValue(e.target.value)} />\r\n                <p>\r\n                    {inputValue}\r\n                </p>\r\n                <Button variant=\"outline-danger\" className=\"mx-2\" onClick={resetInputValue}>Reset Input Value</Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        heloText: state.text,\r\n        counter: state.counter,\r\n        inputValue: state.inputValue,\r\n        test: true\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        plusCount: () => dispatch({ type: \"plusCounter\" }),\r\n        minusCount: () => dispatch({ type: \"minusCounter\" }),\r\n        resetCount: () => dispatch({ type: \"resetCounter\" }),\r\n        setInputValue: (value) => dispatch({ type: \"setInputValue\", inputValue: value }),\r\n        resetInputValue: () => dispatch({ type: \"resetInputValue\" })\r\n    }\r\n}\r\nconst CounterReduxWithState = connect(mapStateToProps, mapDispatchToProps)(CounterRedux)\r\nexport default CounterReduxWithState;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import actionTypes from '../actionTypes';\r\nconst initialState = {\r\n\r\n    tasks: [],\r\n    editTask: null,\r\n    loading: false,\r\n    removeTasks: new Set(),\r\n    isAllChecked: false,\r\n    openTaskModal: false,\r\n    isConfirmModal: false,\r\n    message: {\r\n        type: \"\",\r\n        text: \"\"\r\n    }\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_TASKS: {\r\n            return {\r\n                ...state,\r\n                tasks: action.data\r\n            }\r\n        }\r\n        case actionTypes.SET_MSG: {\r\n            return {\r\n                ...state,\r\n                message: {\r\n                    type: action.msgType,\r\n                    text: action.text\r\n                }\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.isLoading,\r\n                errorMsg: action.isLoading ? \"\" : state.errorMsg\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_STATUS_TASK: {\r\n            let tasks = [...state.tasks];\r\n            const idx = tasks.findIndex(task => task._id === action.task._id);\r\n            tasks[idx] = action.task;\r\n            return {\r\n                ...state,\r\n                tasks\r\n            }\r\n        }\r\n        case actionTypes.DELETE_ONE_TASK: {\r\n            let tasks = [...state.tasks];\r\n            tasks = tasks.filter(item => item._id !== action._id);\r\n            return {\r\n                ...state,\r\n                tasks\r\n            }\r\n        }\r\n        case actionTypes.ADD_TASK: {\r\n            let tasks = [...state.tasks];\r\n            tasks.push(action.data);\r\n            return {\r\n                ...state,\r\n                tasks\r\n            }\r\n        }\r\n        case actionTypes.EDIT_TASK: {\r\n            let tasks = [...state.tasks];\r\n            const { data } = action;\r\n            const idx = tasks.findIndex(task => task._id === data._id);\r\n            tasks[idx] = data;\r\n            return {\r\n                ...state,\r\n                tasks\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_CHECK_TASK: {\r\n            const { _id } = action;\r\n            let removeTasks = new Set(state.removeTasks);\r\n            if (removeTasks.has(_id)) {\r\n                removeTasks.delete(_id);\r\n            } else {\r\n                removeTasks.add(_id);\r\n            }\r\n            return {\r\n                ...state,\r\n                removeTasks\r\n            }\r\n\r\n        }\r\n        case actionTypes.DELETE_CHECKED_TASKS: {\r\n            let tasks = [...state.tasks];\r\n            const { removeTasks } = state;\r\n            tasks = tasks.filter(task => !removeTasks.has(task._id));\r\n            return {\r\n                ...state,\r\n                tasks,\r\n                removeTasks: new Set()\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_CHECK_ALL_TASKS: {\r\n            const { tasks, isAllChecked } = state;\r\n            let removeTasks = new Set();\r\n            if (!isAllChecked) {\r\n                tasks.forEach(task => {\r\n                    removeTasks.add(task._id);\r\n                });\r\n            };\r\n            return {\r\n                ...state,\r\n                removeTasks,\r\n                isAllChecked: !isAllChecked\r\n            }\r\n\r\n        }\r\n        case actionTypes.TOGGLE_OPEN_ADD_TASK_MODAL: {\r\n            const { task } = action;\r\n            const editTask = task && task._id ? task : false;\r\n            console.log(editTask)\r\n            return {\r\n                ...state,\r\n                editTask: editTask,\r\n                openTaskModal: !state.openTaskModal\r\n            }\r\n        }\r\n        case actionTypes.TOGGLE_CONFIRM_MODAL: {\r\n            return {\r\n                ...state,\r\n                isConfirmModal: !state.isConfirmModal\r\n            }\r\n        }\r\n\r\n        \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\nimport actionTypes from '../actionTypes';\r\nconst initialState = {\r\n    singleTask: null,\r\n    showModal: false,\r\n    openTaskModal: false,\r\n    loading: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.TOGGLE_ST_CONFIRM_MODAL:\r\n            return {\r\n                ...state,\r\n                showModal: !state.showModal\r\n            }\r\n        case actionTypes.TOGGLE_ST_MODAL:\r\n            return {\r\n                ...state,\r\n                openTaskModal: !state.openTaskModal\r\n            }\r\n        case actionTypes.TOGGLE_ST_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        case actionTypes.SET_ST:\r\n            return {\r\n                ...state,\r\n                singleTask: action.task\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import actionTypes from '../actionTypes';\r\nimport {\r\n    isRequired,\r\n    maxLength,\r\n    minLength,\r\n    emailValidation\r\n} from '../../Components/helpers/validators';\r\nconst maxLength25 = maxLength(25);\r\nconst minLength3 = minLength(3);\r\nconst initialState = {\r\n\r\n    formData: {\r\n        name: {\r\n            value: \"\",\r\n            valid: false,\r\n            error: null\r\n        },\r\n        email: {\r\n            value: \"\",\r\n            valid: false,\r\n            error: null\r\n        },\r\n        message: {\r\n            value: \"\",\r\n            valid: false,\r\n            error: null\r\n        }\r\n    },\r\n    loading: false\r\n\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.CHANGE_CONTACT_FORM: {\r\n            const { value, name } = action.data;\r\n            let error = null;\r\n            //validators\r\n            switch (name) {\r\n                case \"name\":\r\n                case \"email\":\r\n                case \"message\":\r\n                    error = isRequired(value) ||\r\n                        (name === \"email\" && emailValidation(value)) ||\r\n                        minLength3(value) ||\r\n                        maxLength25(value);\r\n                    break;\r\n                default: ;\r\n            }\r\n            return {\r\n                ...state,\r\n                formData: {\r\n                    ...state.formData,\r\n                    [name]: {\r\n                        value,\r\n                        valid: !!!error,\r\n                        error\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case actionTypes.ADD_CONTACT_FORM: {\r\n            return {\r\n                ...state,\r\n                formData: {\r\n                    name: {\r\n                        value: \"\",\r\n                        valid: false,\r\n                        error: null\r\n                    },\r\n                    email: {\r\n                        value: \"\",\r\n                        valid: false,\r\n                        error: null\r\n                    },\r\n                    message: {\r\n                        value: \"\",\r\n                        valid: false,\r\n                        error: null\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import actionTypes from '../actionTypes';\r\nconst initialState = {\r\n    search: \"\",\r\n    status: null,\r\n    sort: null,\r\n    create_lte: \"\",\r\n    create_gte: \"\",\r\n    complete_lte: \"\",\r\n    complete_gte: \"\"\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_STATUS: {\r\n            const { value, dropDownType } = action;\r\n            return {\r\n                ...state,\r\n                [dropDownType]: value\r\n            }\r\n        }\r\n        case actionTypes.CHANGE_SEARCH_VALUE: {\r\n            return {\r\n                ...state,\r\n                search: action.value\r\n            }\r\n        }\r\n        case actionTypes.SET_SORT_DATE: {\r\n            const { dateType, date } = action;\r\n            return {\r\n                ...state,\r\n                [dateType]: date\r\n            }\r\n        }\r\n        case actionTypes.RESET_SEARCH_FORM: {\r\n            return {\r\n                ...initialState\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport todoReducer from './reducers/todoReducer';\r\nimport singleTaskReducer from './reducers/singleTaskReducer';\r\nimport contactReducer from './reducers/contactReducer';\r\nimport filterReducer from './reducers/filterReducer';\r\nimport logger from 'redux-logger';\r\n\r\nconst middlewares = [thunk, logger];\r\nconst reducers = combineReducers({\r\n    todoState: todoReducer,\r\n    contactFormState: contactReducer,\r\n    singleTaskState: singleTaskReducer,\r\n    filterState: filterReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(...middlewares));\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"datePicker\":\"filter_datePicker__2OeM3\",\"btn\":\"filter_btn__2-QET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"ToDo_task__1Dh2z\",\"card\":\"ToDo_card__2NsII\",\"checked\":\"ToDo_checked__1_nvC\",\"cardtext\":\"ToDo_cardtext__1xoST\",\"custom_card\":\"ToDo_custom_card__kgsMa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"preloader_section__1-5uG\",\"preloader\":\"preloader_preloader__wkZ_o\",\"squad1\":\"preloader_squad1__11gqt\",\"squad2\":\"preloader_squad2__2bIYJ\",\"squad3\":\"preloader_squad3__kwwD8\",\"loader_text\":\"preloader_loader_text__2zR0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"form_formGroup__345fB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskpage\":\"singletask_taskpage__1oMxZ\",\"task\":\"singletask_task__3evCW\",\"timer\":\"singletask_timer__Ve__8\",\"color\":\"singletask_color__cHps5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"navbar_item__1ogzN\",\"active\":\"navbar_active__Jmm1k\"};"],"sourceRoot":""}